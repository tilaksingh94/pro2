{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Form, Icon, Input, Button, Select, Cascader } from 'antd';\nimport PostData from '../config/api/AuthorizedPost';\nimport ErrorHandling from '../config/api/ErrorHandling';\nimport PostGetData from '../config/api/AuthorizedGet';\nvar Option = Select.Option;\n\nvar LocationDetails = /*#__PURE__*/function (_React$Component) {\n  _inherits(LocationDetails, _React$Component);\n\n  function LocationDetails(props) {\n    var _this;\n\n    _classCallCheck(this, LocationDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LocationDetails).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          _this.setState({\n            loading: true\n          });\n\n          var DataSend = {\n            entity_id_fk: localStorage.getItem('entity_id_fk'),\n            phone_number: values.phone_number,\n            pincode: values.pincode,\n            address: values.address,\n            state_city: values.state_city\n          }; //console.log(DataSend);\n\n          PostData('entity-location', 'POST', DataSend).then(function (result) {\n            var responseJson = result;\n\n            if (responseJson.success) {\n              _this.setState({\n                redirectToReferrer: true,\n                loading: false,\n                ServerMessage: responseJson.message,\n                ServerMessageType: 'success'\n              });\n\n              localStorage.setItem('profile_stage', '2');\n              window.location.reload(false);\n            } else if (responseJson.success == false) {\n              _this.setState({\n                loading: false,\n                ServerMessage: responseJson.message,\n                ServerValidation: responseJson.data\n              });\n            }\n          });\n        }\n      });\n    });\n\n    _this.state = {\n      ServerValidation: [],\n      ServerMessage: '',\n      ServerMessageType: 'error',\n      loading: false,\n      startup_on: null,\n      StateList: []\n    };\n    return _this;\n  }\n\n  _createClass(LocationDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      PostGetData('state_and_city').then(function (result) {\n        _this2.setState({\n          StateList: result.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 4\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 12\n          }\n        }\n      };\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var errors = '';\n\n      if (this.state.ServerMessage) {\n        errors = ErrorHandling(this.state.ServerMessage, this.state.ServerValidation, this.state.ServerMessageType);\n      }\n\n      var prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '91'\n      })(__jsx(Select, {\n        style: {\n          width: 70\n        }\n      }, __jsx(Option, {\n        value: \"91\"\n      }, \"+91\")));\n      return __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-8 offset-md-2\"\n      }, errors, __jsx(\"br\", null))), __jsx(Form, _extends({\n        onSubmit: this.handleSubmit\n      }, formItemLayout, {\n        className: \"location-details-form\"\n      }), __jsx(Form.Item, {\n        label: \"Address\"\n      }, getFieldDecorator('address', {\n        rules: [{\n          required: true,\n          message: 'Please input your Address!'\n        }]\n      })(__jsx(Input, {\n        size: \"large\",\n        prefix: __jsx(Icon, {\n          type: \"shop\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          }\n        }),\n        placeholder: \"Address\"\n      }))), __jsx(Form.Item, {\n        label: \"Phone Number\"\n      }, getFieldDecorator('phone_number', {\n        rules: [{\n          required: true,\n          message: 'Please input your phone number!'\n        }]\n      })(__jsx(Input, {\n        size: \"large\",\n        addonBefore: prefixSelector\n      }))), __jsx(Form.Item, {\n        label: \"Pincode\"\n      }, getFieldDecorator('pincode', {\n        rules: [{\n          required: true,\n          message: 'Please input your pincode!'\n        }]\n      })(__jsx(Input, {\n        size: \"large\",\n        placeholder: \"Pincode\",\n        style: {\n          width: '120px'\n        }\n      }))), __jsx(Form.Item, {\n        label: \"State/City\"\n      }, getFieldDecorator('state_city', {\n        rules: [{\n          required: true,\n          message: 'Please input your State/City!'\n        }]\n      })(__jsx(Cascader, {\n        size: \"large\",\n        options: this.state.StateList,\n        placeholder: \"Please select state/city\"\n      }))), __jsx(Form.Item, {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 20,\n            offset: 4\n          }\n        }\n      }, __jsx(Button, {\n        type: \"primary\",\n        size: \"default\",\n        loading: this.state.loading,\n        htmlType: \"submit\",\n        className: \"login-form-button\"\n      }, \"Save\"))));\n    }\n  }]);\n\n  return LocationDetails;\n}(React.Component);\n\nvar LocationDetailsForm = Form.create({\n  name: 'location_details'\n})(LocationDetails);\nexport default LocationDetailsForm;","map":null,"metadata":{},"sourceType":"module"}