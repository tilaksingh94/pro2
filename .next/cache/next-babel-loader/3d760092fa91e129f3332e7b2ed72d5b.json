{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Form, Icon, Input, Button, DatePicker } from 'antd';\nimport PostData from '../config/api/AuthorizedPost';\nimport ErrorHandling from '../config/api/ErrorHandling';\n\nvar BasicDetails = /*#__PURE__*/function (_React$Component) {\n  _inherits(BasicDetails, _React$Component);\n\n  function BasicDetails(props) {\n    var _this;\n\n    _classCallCheck(this, BasicDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BasicDetails).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          var DataSend = {\n            name: values.name,\n            startup_on: values.startup_on.format('YYYY-MM-DD')\n          };\n\n          _this.setState({\n            loading: true\n          });\n\n          PostData('entity', 'POST', DataSend).then(function (result) {\n            var responseJson = result;\n\n            if (responseJson.success) {\n              _this.setState({\n                redirectToReferrer: true,\n                loading: false,\n                ServerMessage: responseJson.message,\n                ServerMessageType: 'success'\n              });\n\n              localStorage.setItem('entity_id_fk', responseJson.data.id);\n              localStorage.setItem('profile_stage', '1');\n              window.location.reload(false);\n            } else if (responseJson.success == false) {\n              _this.setState({\n                loading: false,\n                ServerMessage: responseJson.message,\n                ServerValidation: responseJson.data\n              });\n            }\n          });\n        }\n      });\n    });\n\n    _this.state = {\n      ServerValidation: [],\n      ServerMessage: '',\n      ServerMessageType: 'error',\n      loading: false,\n      startup_on: null\n    };\n    return _this;\n  }\n\n  _createClass(BasicDetails, [{\n    key: \"render\",\n    value: function render() {\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 4\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 12\n          }\n        }\n      };\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var errors = '';\n\n      if (this.state.ServerMessage) {\n        errors = ErrorHandling(this.state.ServerMessage, this.state.ServerValidation, this.state.ServerMessageType);\n      }\n\n      return __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-6 offset-md-2\"\n      }, errors, __jsx(\"br\", null))), __jsx(Form, _extends({\n        onSubmit: this.handleSubmit\n      }, formItemLayout, {\n        className: \"basic-details-form\"\n      }), __jsx(Form.Item, {\n        label: \"Name\"\n      }, getFieldDecorator('name', {\n        rules: [{\n          required: true,\n          message: 'Please input your name!'\n        }]\n      })(__jsx(Input, {\n        size: \"large\",\n        prefix: __jsx(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          }\n        }),\n        placeholder: \"Name\"\n      }))), __jsx(Form.Item, {\n        label: \"Startup On\"\n      }, getFieldDecorator('startup_on', {\n        rules: [{\n          type: 'object',\n          required: true,\n          message: 'Please select Startup Date!'\n        }]\n      })(__jsx(DatePicker, {\n        size: \"large\"\n      }))), __jsx(Form.Item, {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 20,\n            offset: 4\n          }\n        }\n      }, __jsx(Button, {\n        type: \"primary\",\n        size: \"default\",\n        loading: this.state.loading,\n        htmlType: \"submit\",\n        className: \"login-form-button\"\n      }, \"Save\"))));\n    }\n  }]);\n\n  return BasicDetails;\n}(React.Component);\n\nvar BasicDetailsForm = Form.create({\n  name: 'basic_details'\n})(BasicDetails);\nexport default BasicDetailsForm;","map":null,"metadata":{},"sourceType":"module"}