{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Form, Icon, Button, Select, Switch, TimePicker } from 'antd';\nimport PostData from '../config/api/AuthorizedPost';\nimport ErrorHandling from '../config/api/ErrorHandling';\nimport PostGetData from '../config/api/AuthorizedGet';\n\nclass TimeDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.setState({\n            loading: true\n          });\n          values['entity_id_fk'] = localStorage.getItem('entity_id_fk');\n          values['sunday_start'] = this.timeFormate(values['sunday_start']);\n          values['sunday_end'] = this.timeFormate(values['sunday_end']);\n          values['monday_start'] = this.timeFormate(values['monday_start']);\n          values['monday_end'] = this.timeFormate(values['monday_end']);\n          values['tuesday_start'] = this.timeFormate(values['tuesday_start']);\n          values['tuesday_end'] = this.timeFormate(values['tuesday_end']);\n          values['wednesday_start'] = this.timeFormate(values['wednesday_start']);\n          values['wednesday_end'] = this.timeFormate(values['wednesday_end']);\n          values['thursday_start'] = this.timeFormate(values['thursday_start']);\n          values['thursday_end'] = this.timeFormate(values['thursday_end']);\n          values['friday_start'] = this.timeFormate(values['friday_start']);\n          values['friday_end'] = this.timeFormate(values['friday_end']);\n          values['saturday_start'] = this.timeFormate(values['saturday_start']);\n          values['saturday_end'] = this.timeFormate(values['saturday_end']);\n          console.log(values);\n          PostData('entity-hours', 'POST', values).then(result => {\n            let responseJson = result;\n\n            if (responseJson.success) {\n              this.setState({\n                redirectToReferrer: true,\n                loading: false,\n                ServerMessage: responseJson.message,\n                ServerMessageType: 'success'\n              });\n              localStorage.setItem('profile_stage', '4');\n              window.location.reload(false);\n            } else if (responseJson.success == false) {\n              this.setState({\n                loading: false,\n                ServerMessage: responseJson.message,\n                ServerValidation: responseJson.data\n              });\n            }\n          });\n        }\n      });\n    });\n\n    this.state = {\n      ServerValidation: [],\n      ServerMessage: '',\n      ServerMessageType: 'error',\n      loading: false\n    };\n  }\n\n  timeFormate(hoursVar) {\n    if (hoursVar != \"\" && hoursVar != null) {\n      return hoursVar.format('HH:mm:ss');\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 12\n        },\n        sm: {\n          span: 12\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 12\n        },\n        sm: {\n          span: 12\n        }\n      }\n    };\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    let errors = '';\n\n    if (this.state.ServerMessage) {\n      errors = ErrorHandling(this.state.ServerMessage, this.state.ServerValidation, this.state.ServerMessageType);\n    }\n\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-8 offset-md-2\"\n    }, errors, __jsx(\"br\", null))), __jsx(Form, _extends({\n      onSubmit: this.handleSubmit\n    }, formItemLayout, {\n      className: \"location-details-form\"\n    }), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-3\"\n    }, __jsx(Form.Item, {\n      label: \"Monday\"\n    }, getFieldDecorator('monday')(__jsx(Switch, {\n      checkedChildren: __jsx(Icon, {\n        type: \"check\"\n      }),\n      unCheckedChildren: __jsx(Icon, {\n        type: \"close\"\n      })\n    })))), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(Form.Item, {\n      label: \"Start Time\"\n    }, getFieldDecorator('monday_start')(__jsx(TimePicker, {\n      use12Hours: true,\n      format: \"h:mm A\"\n    })))), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(Form.Item, {\n      label: \"End Time\"\n    }, getFieldDecorator('monday_end')(__jsx(TimePicker, {\n      use12Hours: true,\n      format: \"h:mm A\"\n    }))))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-3\"\n    }, __jsx(Form.Item, {\n      label: \"Tuesday\"\n    }, getFieldDecorator('tuesday')(__jsx(Switch, {\n      checkedChildren: __jsx(Icon, {\n        type: \"check\"\n      }),\n      unCheckedChildren: __jsx(Icon, {\n        type: \"close\"\n      })\n    })))), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(Form.Item, {\n      label: \"Start Time\"\n    }, getFieldDecorator('tuesday_start')(__jsx(TimePicker, {\n      use12Hours: true,\n      format: \"h:mm A\"\n    })))), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(Form.Item, {\n      label: \"End Time\"\n    }, getFieldDecorator('tuesday_end')(__jsx(TimePicker, {\n      use12Hours: true,\n      format: \"h:mm A\"\n    }))))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-3\"\n    }, __jsx(Form.Item, {\n      label: \"Wednesday\"\n    }, getFieldDecorator('wednesday')(__jsx(Switch, {\n      checkedChildren: __jsx(Icon, {\n        type: \"check\"\n      }),\n      unCheckedChildren: __jsx(Icon, {\n        type: \"close\"\n      })\n    })))), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(Form.Item, {\n      label: \"Start Time\"\n    }, getFieldDecorator('wednesday_start')(__jsx(TimePicker, {\n      use12Hours: true,\n      format: \"h:mm A\"\n    })))), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(Form.Item, {\n      label: \"End Time\"\n    }, getFieldDecorator('wednesday_end')(__jsx(TimePicker, {\n      use12Hours: true,\n      format: \"h:mm A\"\n    }))))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-3\"\n    }, __jsx(Form.Item, {\n      label: \"Thursday\"\n    }, getFieldDecorator('thursday')(__jsx(Switch, {\n      checkedChildren: __jsx(Icon, {\n        type: \"check\"\n      }),\n      unCheckedChildren: __jsx(Icon, {\n        type: \"close\"\n      })\n    })))), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(Form.Item, {\n      label: \"Start Time\"\n    }, getFieldDecorator('thursday_start')(__jsx(TimePicker, {\n      use12Hours: true,\n      format: \"h:mm A\"\n    })))), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(Form.Item, {\n      label: \"End Time\"\n    }, getFieldDecorator('thursday_end')(__jsx(TimePicker, {\n      use12Hours: true,\n      format: \"h:mm A\"\n    }))))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-3\"\n    }, __jsx(Form.Item, {\n      label: \"Friday\"\n    }, getFieldDecorator('friday')(__jsx(Switch, {\n      checkedChildren: __jsx(Icon, {\n        type: \"check\"\n      }),\n      unCheckedChildren: __jsx(Icon, {\n        type: \"close\"\n      })\n    })))), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(Form.Item, {\n      label: \"Start Time\"\n    }, getFieldDecorator('friday_start')(__jsx(TimePicker, {\n      use12Hours: true,\n      format: \"h:mm A\"\n    })))), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(Form.Item, {\n      label: \"End Time\"\n    }, getFieldDecorator('friday_end')(__jsx(TimePicker, {\n      use12Hours: true,\n      format: \"h:mm A\"\n    }))))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-3\"\n    }, __jsx(Form.Item, {\n      label: \"Saturday\"\n    }, getFieldDecorator('saturday')(__jsx(Switch, {\n      checkedChildren: __jsx(Icon, {\n        type: \"check\"\n      }),\n      unCheckedChildren: __jsx(Icon, {\n        type: \"close\"\n      })\n    })))), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(Form.Item, {\n      label: \"Start Time\"\n    }, getFieldDecorator('saturday_start')(__jsx(TimePicker, {\n      use12Hours: true,\n      format: \"h:mm A\"\n    })))), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(Form.Item, {\n      label: \"End Time\"\n    }, getFieldDecorator('saturday_end')(__jsx(TimePicker, {\n      use12Hours: true,\n      format: \"h:mm A\"\n    }))))), __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-3\"\n    }, __jsx(Form.Item, {\n      label: \"Sunday\"\n    }, getFieldDecorator('sunday')(__jsx(Switch, {\n      checkedChildren: __jsx(Icon, {\n        type: \"check\"\n      }),\n      unCheckedChildren: __jsx(Icon, {\n        type: \"close\"\n      })\n    })))), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(Form.Item, {\n      label: \"Start Time\"\n    }, getFieldDecorator('sunday_start')(__jsx(TimePicker, {\n      use12Hours: true,\n      format: \"h:mm A\"\n    })))), __jsx(\"div\", {\n      className: \"col-md-4\"\n    }, __jsx(Form.Item, {\n      label: \"End Time\"\n    }, getFieldDecorator('sunday_end')(__jsx(TimePicker, {\n      use12Hours: true,\n      format: \"h:mm A\"\n    }))))), __jsx(Form.Item, {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 20,\n          offset: 4\n        }\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      size: \"default\",\n      loading: this.state.loading,\n      htmlType: \"submit\",\n      className: \"login-form-button\"\n    }, \"Save\"))));\n  }\n\n}\n\nconst TimeDetailsForm = Form.create({\n  name: 'location_details'\n})(TimeDetails);\nexport default TimeDetailsForm;","map":null,"metadata":{},"sourceType":"module"}