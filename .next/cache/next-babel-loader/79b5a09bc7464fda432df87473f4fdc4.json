{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport BaseURL from './BaseUrl';\nexport default function AuthorizedPost(type, MethodName, userData) {\n  return _regeneratorRuntime.async(function AuthorizedPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            fetch(BaseURL(type), {\n              method: MethodName,\n              headers: {\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(userData)\n            }).then(function (response) {\n              return response.json();\n            }).then(function (res) {\n              resolve(res);\n            })[\"catch\"](function (error) {\n              reject(error);\n            });\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":null,"metadata":{},"sourceType":"module"}