{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport BaseURL from './../components/config/api/BaseUrl';\nimport { Redirect } from 'react-router-dom';\nimport Router from 'next/router';\n\nvar Logout = /*#__PURE__*/function (_Component) {\n  _inherits(Logout, _Component);\n\n  function Logout(props) {\n    var _this;\n\n    _classCallCheck(this, Logout);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Logout).call(this, props));\n    _this.state = {\n      logOut: false\n    };\n    return _this;\n  }\n\n  _createClass(Logout, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!localStorage.setItem('token', '')) {\n                this.setState({\n                  logOut: true\n                });\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(BaseURL('logout'), {\n                method: 'post',\n                headers: {\n                  'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: null\n              }).then(function (resp) {\n                return resp.json();\n              }).then(function (result) {\n                if (result.success) {\n                  localStorage.setItem('token', '');\n                  localStorage.setItem('profile_stage', '');\n                  localStorage.setItem('profile_stage', '');\n                  this.setState({\n                    logOut: true\n                  });\n                }\n              }));\n\n            case 3:\n              if (this.state.logOut) {\n                Router.push('/');\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return '';\n    }\n  }]);\n\n  return Logout;\n}(Component);\n\nexport default Logout;","map":null,"metadata":{},"sourceType":"module"}