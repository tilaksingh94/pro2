{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Form, Icon, Button, Select, Switch, TimePicker } from 'antd';\nimport PostData from '../config/api/AuthorizedPost';\nimport ErrorHandling from '../config/api/ErrorHandling';\nimport PostGetData from '../config/api/AuthorizedGet';\n\nvar TimeDetails = /*#__PURE__*/function (_React$Component) {\n  _inherits(TimeDetails, _React$Component);\n\n  function TimeDetails(props) {\n    var _this;\n\n    _classCallCheck(this, TimeDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TimeDetails).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          _this.setState({\n            loading: true\n          });\n\n          values['entity_id_fk'] = localStorage.getItem('entity_id_fk');\n          values['sunday_start'] = _this.timeFormate(values['sunday_start']);\n          values['sunday_end'] = _this.timeFormate(values['sunday_end']);\n          values['monday_start'] = _this.timeFormate(values['monday_start']);\n          values['monday_end'] = _this.timeFormate(values['monday_end']);\n          values['tuesday_start'] = _this.timeFormate(values['tuesday_start']);\n          values['tuesday_end'] = _this.timeFormate(values['tuesday_end']);\n          values['wednesday_start'] = _this.timeFormate(values['wednesday_start']);\n          values['wednesday_end'] = _this.timeFormate(values['wednesday_end']);\n          values['thursday_start'] = _this.timeFormate(values['thursday_start']);\n          values['thursday_end'] = _this.timeFormate(values['thursday_end']);\n          values['friday_start'] = _this.timeFormate(values['friday_start']);\n          values['friday_end'] = _this.timeFormate(values['friday_end']);\n          values['saturday_start'] = _this.timeFormate(values['saturday_start']);\n          values['saturday_end'] = _this.timeFormate(values['saturday_end']);\n          console.log(values);\n          PostData('entity-hours', 'POST', values).then(function (result) {\n            var responseJson = result;\n\n            if (responseJson.success) {\n              _this.setState({\n                redirectToReferrer: true,\n                loading: false,\n                ServerMessage: responseJson.message,\n                ServerMessageType: 'success'\n              });\n\n              localStorage.setItem('profile_stage', '4');\n              window.location.reload(false);\n            } else if (responseJson.success == false) {\n              _this.setState({\n                loading: false,\n                ServerMessage: responseJson.message,\n                ServerValidation: responseJson.data\n              });\n            }\n          });\n        }\n      });\n    });\n\n    _this.state = {\n      ServerValidation: [],\n      ServerMessage: '',\n      ServerMessageType: 'error',\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(TimeDetails, [{\n    key: \"timeFormate\",\n    value: function timeFormate(hoursVar) {\n      if (hoursVar != \"\" && hoursVar != null) {\n        return hoursVar.format('HH:mm:ss');\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 12\n          },\n          sm: {\n            span: 12\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 12\n          },\n          sm: {\n            span: 12\n          }\n        }\n      };\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var errors = '';\n\n      if (this.state.ServerMessage) {\n        errors = ErrorHandling(this.state.ServerMessage, this.state.ServerValidation, this.state.ServerMessageType);\n      }\n\n      return __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-8 offset-md-2\"\n      }, errors, __jsx(\"br\", null))), __jsx(Form, _extends({\n        onSubmit: this.handleSubmit\n      }, formItemLayout, {\n        className: \"location-details-form\"\n      }), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-3\"\n      }, __jsx(Form.Item, {\n        label: \"Monday\"\n      }, getFieldDecorator('monday')(__jsx(Switch, {\n        checkedChildren: __jsx(Icon, {\n          type: \"check\"\n        }),\n        unCheckedChildren: __jsx(Icon, {\n          type: \"close\"\n        })\n      })))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(Form.Item, {\n        label: \"Start Time\"\n      }, getFieldDecorator('monday_start')(__jsx(TimePicker, {\n        use12Hours: true,\n        format: \"h:mm A\"\n      })))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(Form.Item, {\n        label: \"End Time\"\n      }, getFieldDecorator('monday_end')(__jsx(TimePicker, {\n        use12Hours: true,\n        format: \"h:mm A\"\n      }))))), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-3\"\n      }, __jsx(Form.Item, {\n        label: \"Tuesday\"\n      }, getFieldDecorator('tuesday')(__jsx(Switch, {\n        checkedChildren: __jsx(Icon, {\n          type: \"check\"\n        }),\n        unCheckedChildren: __jsx(Icon, {\n          type: \"close\"\n        })\n      })))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(Form.Item, {\n        label: \"Start Time\"\n      }, getFieldDecorator('tuesday_start')(__jsx(TimePicker, {\n        use12Hours: true,\n        format: \"h:mm A\"\n      })))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(Form.Item, {\n        label: \"End Time\"\n      }, getFieldDecorator('tuesday_end')(__jsx(TimePicker, {\n        use12Hours: true,\n        format: \"h:mm A\"\n      }))))), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-3\"\n      }, __jsx(Form.Item, {\n        label: \"Wednesday\"\n      }, getFieldDecorator('wednesday')(__jsx(Switch, {\n        checkedChildren: __jsx(Icon, {\n          type: \"check\"\n        }),\n        unCheckedChildren: __jsx(Icon, {\n          type: \"close\"\n        })\n      })))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(Form.Item, {\n        label: \"Start Time\"\n      }, getFieldDecorator('wednesday_start')(__jsx(TimePicker, {\n        use12Hours: true,\n        format: \"h:mm A\"\n      })))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(Form.Item, {\n        label: \"End Time\"\n      }, getFieldDecorator('wednesday_end')(__jsx(TimePicker, {\n        use12Hours: true,\n        format: \"h:mm A\"\n      }))))), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-3\"\n      }, __jsx(Form.Item, {\n        label: \"Thursday\"\n      }, getFieldDecorator('thursday')(__jsx(Switch, {\n        checkedChildren: __jsx(Icon, {\n          type: \"check\"\n        }),\n        unCheckedChildren: __jsx(Icon, {\n          type: \"close\"\n        })\n      })))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(Form.Item, {\n        label: \"Start Time\"\n      }, getFieldDecorator('thursday_start')(__jsx(TimePicker, {\n        use12Hours: true,\n        format: \"h:mm A\"\n      })))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(Form.Item, {\n        label: \"End Time\"\n      }, getFieldDecorator('thursday_end')(__jsx(TimePicker, {\n        use12Hours: true,\n        format: \"h:mm A\"\n      }))))), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-3\"\n      }, __jsx(Form.Item, {\n        label: \"Friday\"\n      }, getFieldDecorator('friday')(__jsx(Switch, {\n        checkedChildren: __jsx(Icon, {\n          type: \"check\"\n        }),\n        unCheckedChildren: __jsx(Icon, {\n          type: \"close\"\n        })\n      })))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(Form.Item, {\n        label: \"Start Time\"\n      }, getFieldDecorator('friday_start')(__jsx(TimePicker, {\n        use12Hours: true,\n        format: \"h:mm A\"\n      })))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(Form.Item, {\n        label: \"End Time\"\n      }, getFieldDecorator('friday_end')(__jsx(TimePicker, {\n        use12Hours: true,\n        format: \"h:mm A\"\n      }))))), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-3\"\n      }, __jsx(Form.Item, {\n        label: \"Saturday\"\n      }, getFieldDecorator('saturday')(__jsx(Switch, {\n        checkedChildren: __jsx(Icon, {\n          type: \"check\"\n        }),\n        unCheckedChildren: __jsx(Icon, {\n          type: \"close\"\n        })\n      })))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(Form.Item, {\n        label: \"Start Time\"\n      }, getFieldDecorator('saturday_start')(__jsx(TimePicker, {\n        use12Hours: true,\n        format: \"h:mm A\"\n      })))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(Form.Item, {\n        label: \"End Time\"\n      }, getFieldDecorator('saturday_end')(__jsx(TimePicker, {\n        use12Hours: true,\n        format: \"h:mm A\"\n      }))))), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-3\"\n      }, __jsx(Form.Item, {\n        label: \"Sunday\"\n      }, getFieldDecorator('sunday')(__jsx(Switch, {\n        checkedChildren: __jsx(Icon, {\n          type: \"check\"\n        }),\n        unCheckedChildren: __jsx(Icon, {\n          type: \"close\"\n        })\n      })))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(Form.Item, {\n        label: \"Start Time\"\n      }, getFieldDecorator('sunday_start')(__jsx(TimePicker, {\n        use12Hours: true,\n        format: \"h:mm A\"\n      })))), __jsx(\"div\", {\n        className: \"col-md-4\"\n      }, __jsx(Form.Item, {\n        label: \"End Time\"\n      }, getFieldDecorator('sunday_end')(__jsx(TimePicker, {\n        use12Hours: true,\n        format: \"h:mm A\"\n      }))))), __jsx(Form.Item, {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 20,\n            offset: 4\n          }\n        }\n      }, __jsx(Button, {\n        type: \"primary\",\n        size: \"default\",\n        loading: this.state.loading,\n        htmlType: \"submit\",\n        className: \"login-form-button\"\n      }, \"Save\"))));\n    }\n  }]);\n\n  return TimeDetails;\n}(React.Component);\n\nvar TimeDetailsForm = Form.create({\n  name: 'location_details'\n})(TimeDetails);\nexport default TimeDetailsForm;","map":null,"metadata":{},"sourceType":"module"}